{$Q+}

type integer=longint;

function min(a, b:integer):integer;
begin
 min:=(a+b-abs(a-b)) div 2;
end;

var
x, y, ans, l, r:array[0..1001] of integer;
w:array[0..1001] of boolean;
i, j, n, k, qwerty, mx, mn:integer;
begin

assign(input, 'monument.in');
reset(input);

assign(output, 'monument.out');
rewrite(output);

readln(n, k);
for i:=1 to n do
 readln(x[i],y[i]);
x[0]:=x[n];
y[0]:=y[n]; 

mx:=y[1];
mn:=mx;

for i:=1 to n do begin
 if y[i]>mx then mx:=y[i];
 if y[i]<mn then mn:=y[i];
end;

for i:=0 to n-1 do 
 if (x[i]=x[i+1]) and (y[i]<>y[i+1]) then begin
  for j:=min(y[i],y[i+1]) to max(y[i],y[i+1])-1 do begin
  if w[j] then begin r[j]:=x[i];
  if r[j]<l[j] then swap(l[j], r[j]);
  end
  else begin l[j]:=x[i];
   w[j]:=true;
  end;
  end;
 end;


 
qwerty:=1; 
ans[qwerty]:=0;
 for i:=mn to mx-1 do begin
  j:=i mod k;
  j:=(l[i] div k)*k+j;
  if j<l[i] then inc(j,k);
  if j<=r[i] then begin
   if (j>l[i]) and (j<r[i]) then inc(ans[qwerty]);
   inc(ans[qwerty],((r[i]-j-1) div k)+1);
  end
  else inc(ans[qwerty]);
 end;
 
 
for qwerty:=2 to k do begin
 for i:=mn to mx-1 do begin
  inc(r[i]);
  inc(l[i]);
 end;
  
ans[qwerty]:=0;
 for i:=mn to mx-1 do begin
  j:=i mod k;
  j:=(l[i] div k)*k+j;
  if j<l[i] then inc(j,k);
  if j<=r[i] then begin
   if j>l[i] then inc(ans[qwerty]);
   inc(ans[qwerty],((r[i]-j-1) div k)+1);
  end;
 end;

end;  
mn:=ans[1];
for i:=2 to k do
 if ans[i]<mn then mn:=ans[i];
write(mn);
close(input);
close(output);

end.
