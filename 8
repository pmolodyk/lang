program ProjectA3;

{$APPTYPE CONSOLE}

uses
  SysUtils, Math;

type mas = array[1..100100] of longint;

var n, s : longint;
    a, k : mas;
    i, j, q : longint;
    kol, sub : int64;
    heap : array[1..100000] of longint;
    size : longint;

procedure qsort(l, r : longint);
var i, j, mid, q : longint;
begin
  i := l; j := r;
  mid := k[(l + r) div 2];

  repeat
    while k[i] < mid do
      inc(i);
    while k[j] > mid do
      dec(j);

    if i <= j then
      begin
        q := k[i]; k[i] := k[j]; k[j] := q;
        q := a[i]; a[i] := a[j]; a[j] := q;

        inc(i);
        dec(j);
      end;
  until i >= j;

  if j > l then
    qsort(l, j);
  if i < r then
    qsort(i, r);
end;

procedure push(n : longint);
var i, q : longint;
begin
  i := n;

  while i*2 <= size do
  begin
    if (i*2+1 <= size) and (heap[i*2+1] > heap[i*2]) and (heap[i] < heap[i*2+1]) then
      begin
        q := heap[i];
        heap[i] := heap[i*2+1];
        heap[i*2+1] := q;
        i := i*2+1;
      end
    else
      if heap[i*2] > heap[i] then
        begin
          q := heap[i];
          heap[i] := heap[i*2];
          heap[i*2] := q;

          i := i*2;
        end
      else
        break;
  end;
end;

procedure up;
var i, q : longint;
begin
  i := size;

  while i > 1 do
  begin
    if heap[i] < heap[i div 2] then
      begin
        q := heap[i];
        heap[i] := heap[i div 2];
        heap[i div 2] := q;
        i := i div 2;
      end
    else
      break;
  end;
end;

procedure delete;
begin
  heap[1] := heap[size];
  dec(size);
  if size > 1 then
    push(1);
end;

procedure plus(x : longint);
begin
  inc(size);
  heap[size] := x;
  up;
end;

begin
//  assign(input, 'input.txt'); assign(output, 'output.txt');
  assign(input, 'castle.in'); assign(output, 'castle.out');

  readln(n, s);

  kol := 0;
  for i := 1 to n do
  begin
    readln(a[i], k[i]);
    kol := kol + a[i];
  end;

  size := 0;
  qsort(1, n);

  for i := n downto 1 do
  begin
    while size*s > 0 do
    begin
      if heap[1] > k[i] then
        begin
          kol := kol - heap[1];
          delete;
          dec(s);
        end
      else
        break;
    end;

    sub := a[i] div k[i];
    sub := min(sub, s);

    kol := kol - sub * k[i];
    s := s - sub;

    if s*kol = 0 then
      begin
        writeln(kol);
        exit;
      end;

    a[i] := a[i] mod k[i];
    plus(sub);
  end;

  while size*s > 0 do
  begin
    kol := kol - heap[1];
    delete;
    dec(s);
  end;

  writeln(kol);
end.
